# README : Spanner

* **Spanner**

**Spanner** is a python program that leverages wms and git to enable conti-
nous integration builds. Spanner automates building packages from  mul-
tiple git repos into conary packages as well as building conary groups
after build runs.

* **Overview**

    **Spanner** requires a **WMS** control repo with a directory of bob-plans.  The
    bob-plans directory must contain specific directories.

    Project/
        ├ ─ ─ control.yaml # Contains a list of git repos to add to your forest
        ├── bob-plans
            ├── config # Config files for bob.
            ├── external # Packages built outside spanner on conary label
            ├── products # Conary Groups
            └── projects # Conary Pkgs built by spanner

    spanner also requires a wms url.

    ie:   http://wheresmystuff.unx.sas.com/api/repos/scc/build-tools



* **Common Commands**

    -   build  Build all packages that have changed in the git forest.

    -   plan   Make a set of bob plan templates for a git forest.

    -   config Show spanner config

    -   OPTIONS
       --branch=BRANCH
              Specifies the branch to build. Defaults to master  if  not  sup-
              plied ie: --branch master

       --cfgfile=CFGFILE
              Specifies  a specific spannerrc. Defaults to none using internal
              hard coded config. Not required in most instances.   ie:  --cfg-
              file ~/spannerrc

       --debug-logging
              Toggles  debug log level on. Defaults to off (quiet) if not sup-
              plied. Provides usefull output when run in jenkins.

       --dry-run
              Toggles test mode on. Defaults to off. Used on initial  runs  to
              test outputs. usually paired with --debug-logging

       --group
              Toggles  group  build  on. Defaults to off. When on spanner will
              create a group at the end of the  build  run.  The  contents  of
              which  include all packages in projects and oprionally the pack-
              ages specified in external directories. Uses  a  special  config
              file group.conf in the config directory.


       --products
              Toggles  products build on. Defaults to off. Builds the plans in
              the products directory. Used for packages or group  builds  that
              require pkgs in projects to be built before building.

       --quiet
              Toggles silent mode. Defaults to off. Deprecated.


* **Credits**

    - Credits -- Brett Smith <bc.smith@sas.com> 
    - Copyright -- (c) SAS Institute Inc.
    - License -- SEE LICENSE

